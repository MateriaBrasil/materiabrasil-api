---
"$schema": http://json-schema.org/draft-04/hyper-schema
title: MateriaBrasil - Album
description: An album is a collection of favorites
stability: prototype
type:
  - object
definitions:
  id:
    description: unique identifier of the album
    readOnly: true
    type:
      - integer
  user_id:
    description: the unique identifier of the user the album belongs to
    type:
      - integer
  name:
    description: the name of the album
    type:
      - string
  default:
    description: indicates if this album is the user's default one
    type:
      - boolean
  private:
    description: indicates if this album is private
    type:
      - boolean
      - "null"
  identity:
    anyOf:
      - "$ref": "/schemata/album#/definitions/id"
links:
  - description: Info for existing album.
    href: "/albums/{(%2Fschemata%2Falbum%23%2Fdefinitions%2Fidentity)}"
    method: GET
    rel: self
    schema:
      strictProperties: true
      properties: {}
      type:
        - object
    targetSchema:
      anyOf:
        - "$ref": "/schemata/album"
        - "$ref": "/schemata/error"
    title: Info
  - description: Update a album.
    href: "/albums/{(%2Fschemata%2Falbum%23%2Fdefinitions%2Fidentity)}"
    method: PUT
    rel: self
    schema:
      additionalProperties: false
      properties:
        private:
          "$ref": "/schemata/album#/definitions/private"
      type:
        - object
    targetSchema:
      anyOf:
        - "$ref": "/schemata/album"
        - "$ref": "/schemata/error"
    title: Update
  - description: List favorites on the album.
    href: "/albums/{(%2Fschemata%2Falbum%23%2Fdefinitions%2Fidentity)}/favorites"
    method: GET
    rel: index
    schema:
      strictProperties: true
      properties: {}
      type:
        - object
    targetSchema:
      anyOf:
        - type: "array"
          items:
            "$ref": "/schemata/favorite"
        - "$ref": "/schemata/error"
    title: List favorites
  - description: Create a new album.
    href: "/albums"
    method: POST
    rel: create
    schema:
      strictProperties: true
      properties:
        name:
          "$ref": "/schemata/album#/definitions/name"
      type:
        - object
    targetSchema:
      anyOf:
        - "$ref": "/schemata/album"
        - "$ref": "/schemata/error"
    title: Create
properties:
  id:
    "$ref": "/schemata/album#/definitions/id"
  user_id:
    "$ref": "/schemata/album#/definitions/user_id"
  name:
    "$ref": "/schemata/album#/definitions/name"
  default:
    "$ref": "/schemata/album#/definitions/default"
  private:
    "$ref": "/schemata/album#/definitions/private"
additionalProperties: false
id: schemata/album
